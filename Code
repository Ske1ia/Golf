float bulletY=650;
float bulletX=355;
float gunX=350;
int balloonx=40;
int balloony=350;
int ballx=10;
int bally=150;
int dirx=4;
int dirx2=6;
boolean moveUp = false;
int counter=0;
int h;
int w;
int checker=50;
float x = random(0,700);
float y =random(50,300);

void setup(){
  size(700,700);
  background(255);
}

void draw(){
  background(255);
  noStroke();
  for( h=0; h<width; h+=checker){   // checkered pattern
  for( w=0; w<height; w+=checker){
    if((h+w)%20==0){
      fill(0,150,0);
    }
    else{
      fill(0,random(50,50),0);//allowing varying gradient of grass area
  }
    rect(h,w,checker,checker);
  }
 }
 fill(255);
 ellipse(x,y,40,40);
 fill(0);
 rect(x+15,y-80,10,90);
 fill(250,0,0);
 rect(x+15,y-80, 40,30);
 fill(255);
 text("GOAL",x-15,y-20); // goal set for the game
  fill(155);
 rect(0,586,952,714);            
 strokeWeight(15);
 stroke(0);
 fill(255,0,0);
   bulletX=gunX+5;
  ellipse(bulletX,bulletY,20,20);
 
  if(keyPressed==true && keyCode==LEFT){
    gunX=gunX-6;
  }
  if(keyPressed==true && keyCode==RIGHT){
    gunX=gunX+6;
  }
  if(keyPressed && key==' '){
    moveUp=true;
   
  }
  if(moveUp==true){
    bulletY=bulletY-40;
  }
  if(bulletY<10){
    bulletY=650;
    moveUp=false;
  }

 balloon();
 balloonx = balloonx + dirx;              // speed of ball
  if(balloonx>width || balloonx<0){
    if(dirx>0)
      dirx=-4;
    else
     dirx=4;
}

balloon2();
ballx=ballx+dirx2;
if(ballx>width || ballx<0){
  if(dirx>0)
  dirx2=-6;
  else
  dirx2=6;
}

float dist = collision(balloonx,balloony,bulletX,bulletY);
if(dist<10){
  noLoop();
  textSize(25);
  text("You lose! " + counter+ " golf balls used.",width/2-200,height/2);
  print(counter);
}

float dist1 = goal(bulletX,bulletY,x,y);
if(dist1<10){
  noLoop();
  textSize(25);
  text("Congratulations! You win using " + counter+" golf balls!", width/2-200,height/2);
}

float dist2 = redBall(ballx,bally,bulletX,bulletY);
if(dist2<10){
  noLoop();
  textSize(25);
  text("You lose! " + counter+ " golf balls used.",width/2-200,height/2);
  print(counter);
}
}

void balloon(){
  strokeWeight(15);
  fill(255,0,0);
  ellipse(balloonx,balloony,40,40);
}

void balloon2(){
  strokeWeight(15);
  fill(255,0,0);
  ellipse(ballx,bally,40,40);
}

float collision(float x1,float y1, float x2, float y2){
  float distx=x2-x1;
  float disty=y2-y1;
  return sqrt(distx*distx+disty+disty);
}

void keyPressed(){
  if(keyPressed && key==' '){
    counter++;
  }
}

float goal(float x1,float y1, float x2, float y2){
  float distx1=x2-x1;
  float disty1=y2-y1;
  return sqrt(distx1*distx1+disty1+disty1);
}

float redBall(float x1,float y1, float x2, float y2){
  float distx2=x2-x1;
  float disty2=y2-y1;
  return sqrt(distx2*distx2+disty2+disty2);
}
